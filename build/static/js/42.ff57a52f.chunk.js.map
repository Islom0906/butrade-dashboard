{"version":3,"file":"static/js/42.ff57a52f.chunk.js","mappings":"kOAKA,MAAMA,EAAU,CACZ,CACIC,MAAO,OACPC,UAAW,OACXC,IAAK,OACLC,OAASC,IAASC,EAAAA,EAAAA,KAAA,KAAAC,SAAIF,KAE1B,CACIJ,MAAO,QACPC,UAAW,QACXC,IAAK,QACLC,OAASC,IAASC,EAAAA,EAAAA,KAACE,EAAAA,EAAG,CAAAD,SAAEF,KAE5B,CACIJ,MAAO,UACPC,UAAW,SACXC,IAAK,SACLC,OAASC,IAASC,EAAAA,EAAAA,KAAA,KAAAC,SAAIF,KAE1B,CACIJ,MAAO,OACPC,UAAW,aACXC,IAAK,aACLC,OAASC,IAASC,EAAAA,EAAAA,KAAA,KAAAC,SAAIE,IAAOJ,GAAMK,OAAO,+BAI5CC,EAAgB,CAClB,CACIV,MAAO,eACPC,UAAW,QACXC,IAAK,QACLC,OAASC,IAASC,EAAAA,EAAAA,KAAA,KAAAC,SAAIF,KAE1B,CACIJ,MAAO,gBACPC,UAAW,QACXC,IAAK,QACLC,OAASC,IAASC,EAAAA,EAAAA,KAACE,EAAAA,EAAG,CAAAD,SAAEF,MA+ChC,EAzCeO,KACX,MAAM,KAACC,EAAI,UAAEC,IAAaC,EAAAA,EAAAA,UACtB,aACA,IAAMC,EAAAA,EAAWC,QAAQ,gBACzB,CAEIC,QAAUC,IAENC,EAAAA,GAAQD,MAAMA,EAAM,IAShC,OACIb,EAAAA,EAAAA,KAAA,OAAAC,UACID,EAAAA,EAAAA,KAACe,EAAAA,EAAI,CAACC,KAAK,SAASC,SAAUT,EAAUP,UACpCD,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACFxB,QAASA,EACTyB,WAAY,CACRC,kBAAoBC,IAEZrB,EAAAA,EAAAA,KAACkB,EAAAA,EAAK,CACFxB,QAASW,EACTiB,WAAkB,OAAND,QAAM,IAANA,OAAM,EAANA,EAAQE,MACpBC,OAASD,GAAUA,EAAME,MAKzCH,WAAYf,EACZiB,OAASH,GAAiB,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQI,QAGlC,C,YCpFdC,EAAOC,QAAU,SAAsBC,EAAMC,EAAMC,EAASC,GAC1D,IAAIC,EAAMF,EAAUA,EAAQG,KAAKF,EAAgBH,EAAMC,QAAQ,EAE/D,QAAY,IAARG,EACF,QAASA,EAGX,GAAIJ,IAASC,EACX,OAAO,EAGT,GAAoB,kBAATD,IAAsBA,GAAwB,kBAATC,IAAsBA,EACpE,OAAO,EAGT,IAAIK,EAAQC,OAAOC,KAAKR,GACpBS,EAAQF,OAAOC,KAAKP,GAExB,GAAIK,EAAMI,SAAWD,EAAMC,OACzB,OAAO,EAMT,IAHA,IAAIC,EAAkBJ,OAAOK,UAAUC,eAAeC,KAAKb,GAGlDc,EAAM,EAAGA,EAAMT,EAAMI,OAAQK,IAAO,CAC3C,IAAI9C,EAAMqC,EAAMS,GAEhB,IAAKJ,EAAgB1C,GACnB,OAAO,EAGT,IAAI+C,EAAShB,EAAK/B,GACdgD,EAAShB,EAAKhC,GAIlB,IAAY,KAFZmC,EAAMF,EAAUA,EAAQG,KAAKF,EAAgBa,EAAQC,EAAQhD,QAAO,SAEtC,IAARmC,GAAkBY,IAAWC,EACjD,OAAO,CAEX,CAEA,OAAO,CACT,C","sources":["pages/sample/Order/index.jsx","../node_modules/shallowequal/index.js"],"sourcesContent":["import {Tag, Table, message, Spin} from 'antd';\nimport apiService from \"../../../@crema/services/apis/api\";\nimport { useQuery} from \"react-query\";\nimport moment from \"moment\";\n\nconst columns = [\n    {\n        title: 'Name',\n        dataIndex: 'name',\n        key: 'name',\n        render: (text) => <p>{text}</p>,\n    },\n    {\n        title: 'Phone',\n        dataIndex: 'phone',\n        key: 'phone',\n        render: (text) => <Tag>{text}</Tag>,\n    },\n    {\n        title: 'Address',\n        dataIndex: 'adress',\n        key: 'adress',\n        render: (text) => <p>{text}</p>,\n    },\n    {\n        title: 'Date',\n        dataIndex: 'created_at',\n        key: 'created_at',\n        render: (text) => <p>{moment(text).format('MMMM Do YYYY, h:mm:ss a')}</p>,\n    },\n];\n\nconst columnsOrders = [\n    {\n        title: 'Product Name',\n        dataIndex: 'title',\n        key: 'title',\n        render: (text) => <p>{text}</p>,\n    },\n    {\n        title: 'Product Count',\n        dataIndex: 'count',\n        key: 'count',\n        render: (text) => <Tag>{text}</Tag>,\n    },\n];\n\n\n\nconst Orders = () => {\n    const {data, isLoading} = useQuery(\n        'order-get',\n        () => apiService.getData('/order-list'),\n        {\n            // enabled:false,\n            onError: (error) => {\n\n                message.error(error);\n                // Handle the error\n            },\n        },\n    );\n\n\n\n\n    return (\n        <div>\n            <Spin size='medium' spinning={isLoading}>\n                <Table\n                    columns={columns}\n                    expandable={{\n                        expandedRowRender: (record) => {\n                            return (\n                                <Table\n                                    columns={columnsOrders}\n                                    dataSource={record?.order}\n                                    rowKey={(order) => order.id}\n                                />\n                            );\n                        },\n                    }}\n                    dataSource={data}\n                    rowKey={(record) => record?.id}\n                />\n            </Spin>\n        </div>\n    );\n};\n\nexport default Orders;","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n"],"names":["columns","title","dataIndex","key","render","text","_jsx","children","Tag","moment","format","columnsOrders","Orders","data","isLoading","useQuery","apiService","getData","onError","error","message","Spin","size","spinning","Table","expandable","expandedRowRender","record","dataSource","order","rowKey","id","module","exports","objA","objB","compare","compareContext","ret","call","keysA","Object","keys","keysB","length","bHasOwnProperty","prototype","hasOwnProperty","bind","idx","valueA","valueB"],"sourceRoot":""}